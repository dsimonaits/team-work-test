{"mappings":"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","sources":["src/js/pagination.js","src/index.js"],"sourcesContent":["(function (factory) {\n  'use strict';\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof define === 'function' && define.cmd) {\n    define(function (require, exports, module) {\n      factory(require('jquery'));\n    });\n  } else {\n    factory(jQuery);\n  }\n})(function ($) {\n  'use strict';\n  /**\n   * @param {[type]} $target [description]\n   * @param {[type]} options [description]\n   */\n  var Pagination = function ($target, options) {\n    this.$target = $target;\n    this.options = $.extend(\n      {},\n      Pagination.DEFAULTS,\n      this.$target.data('pagination'),\n      typeof options == 'object' && options\n    );\n    this.init();\n  };\n  Pagination.VERSION = '1.4.0';\n\n  Pagination.DEFAULTS = {\n    total: 1,\n    current: 1,\n    length: 10,\n    size: 2,\n    prev: '&lt;',\n    next: '&gt;',\n    click: function (e) {},\n  };\n\n  Pagination.prototype = {\n    /**\n     * @return {[type]} [description]\n     */\n    init: function () {\n      if (this.options.total < 1) {\n        this.options.total = 1;\n      }\n      if (this.options.current < 1) {\n        this.options.current = 1;\n      }\n      if (this.options.length < 1) {\n        this.options.length = 1;\n      }\n      if (\n        this.options.current >\n        Math.ceil(this.options.total / this.options.length)\n      ) {\n        this.options.current = Math.ceil(\n          this.options.total / this.options.length\n        );\n      }\n      if (this.options.size < 1) {\n        this.options.size = 1;\n      }\n      if ('function' === typeof this.options.ajax) {\n        var me = this;\n        this.options.ajax(\n          {\n            current: me.options.current,\n            length: me.options.length,\n            total: me.options.total,\n          },\n          function (options) {\n            return me.refresh(options);\n          },\n          me.$target\n        );\n      } else {\n        this.render();\n      }\n      this.onClick();\n    },\n    /**\n     * @return {[type]} [description]\n     */\n    render: function () {\n      var options = this.options,\n        $target = this.$target;\n      $target.empty();\n      // 上一页\n      $target.append(\n        '<li><a herf=\"javascript:void(0)\" data-page=\"prev\">' +\n          options.prev +\n          '</a></li>'\n      );\n      var page = this.getPages();\n      if (page.start > 1) {\n        $target.append(\n          '<li><a herf=\"javascript:void(0)\" data-page=\"' +\n            1 +\n            '\">' +\n            1 +\n            '</a></li>'\n        );\n        $target.append('<li><span>...</span></li>');\n      }\n      for (var i = page.start; i <= page.end; i++) {\n        $target.append(\n          '<li><a herf=\"javascript:void(0)\" data-page=\"' +\n            i +\n            '\">' +\n            i +\n            '</a></li>'\n        );\n      }\n      if (page.end < Math.ceil(options.total / options.length)) {\n        $target.append('<li><span>...</span></li>');\n        $target.append(\n          '<li><a herf=\"javascript:void(0)\" data-page=\"' +\n            Math.ceil(options.total / options.length) +\n            '\">' +\n            Math.ceil(options.total / options.length) +\n            '</a></li>'\n        );\n      }\n      $target.append(\n        '<li><a herf=\"javascript:void(0)\" data-page=\"next\">' +\n          options.next +\n          '</a></li>'\n      );\n      $target\n        .find('li>a[data-page=\"' + options.current + '\"]')\n        .parent()\n        .addClass('active');\n      if (options.current <= 1) {\n        $target.find('li>a[data-page=\"prev\"]').parent().addClass('disabled');\n      }\n      if (options.current >= Math.ceil(options.total / options.length)) {\n        $target.find('li>a[data-page=\"next\"]').parent().addClass('disabled');\n      }\n    },\n    /**\n     * @return {[type]} [description]\n     */\n    getPages: function () {\n      var $target = this.$target,\n        options = this.options,\n        start = options.current - options.size,\n        end = options.current + options.size;\n      if (\n        options.current >=\n        Math.ceil(options.total / options.length) - options.size\n      ) {\n        start -=\n          options.current -\n          Math.ceil(options.total / options.length) +\n          options.size;\n      }\n      if (options.current <= options.size) {\n        end += options.size - options.current + 1;\n      }\n      if (start < 1) {\n        start = 1;\n      }\n\n      if (end > Math.ceil(options.total / options.length)) {\n        end = Math.ceil(options.total / options.length);\n      }\n      var pages = {\n        start: start,\n        end: end,\n      };\n      return pages;\n    },\n    /**\n     * @return {[type]} [description]\n     */\n    onClick: function () {\n      var $target = this.$target,\n        options = this.options,\n        me = this;\n      $target.off('click');\n      $target.on('click', '>li>a[data-page]', function (e) {\n        if (\n          $(this).parent().hasClass('disabled') ||\n          $(this).parent().hasClass('active')\n        ) {\n          return;\n        }\n        var button = $(this).data('page');\n        switch (button) {\n          case 'prev':\n            if (options.current > 1) {\n              options.current--;\n            }\n            break;\n          case 'next':\n            if (options.current < Math.ceil(options.total)) {\n              options.current++;\n            }\n            break;\n          default:\n            button = parseInt(button);\n            if (!isNaN(button)) {\n              options.current = parseInt(button);\n            }\n            break;\n        }\n        var temp = {\n          current: options.current,\n          length: options.length,\n          total: options.total,\n        };\n        if ('function' === typeof options.ajax) {\n          options.ajax(\n            temp,\n            function (options) {\n              return me.refresh(options);\n            },\n            $target\n          );\n        } else {\n          me.render();\n        }\n        options.click(temp, $target);\n      });\n    },\n    /**\n     * @param  {[object]} options [description]\n     * @return {[type]}         [description]\n     */\n    refresh: function (options) {\n      if ('object' === typeof options) {\n        if (options.total) {\n          this.options.total = options.total;\n        }\n        if (options.length) {\n          this.options.length = options.length;\n        }\n      }\n      this.render();\n    },\n  };\n  $.fn.pagination = function (options) {\n    this.each(function () {\n      $(this).data('pagination', new Pagination($(this), options));\n    });\n    return this;\n  };\n});\n","// import { API_KEY, URL } from './js/fetch';\nimport pagination from './js/pagination';\n\nlet query = '';\nlet currentPage = 1;\nlet totalResults = 500;\nlet numberPerPage = null;\nlet totalPages = null;\n\n$(`#pagination`).pagination({\n  total: totalResults,\n  current: currentPage,\n  length: 20,\n  size: 2,\n  prev: '&lt;',\n  next: '&gt;',\n\n  click: async function (e) {\n    currentPage = e.current;\n\n    // clearContent(); // очистка перед отрисовкой новой страницы\n\n    // await fetchMovies(); // пример вызова конкретной функции\n  },\n});\n"],"names":["factory","$","Pagination","$target","options","this","extend","DEFAULTS","data","init","VERSION","total","current","length","size","prev","next","click","e","prototype","Math","ceil","ajax","me","refresh","render","onClick","empty","append","page","getPages","start","i","end","find","parent","addClass","options1","off","on","hasClass","button","parseInt","isNaN","temp","fn","pagination","each","define","amd","cmd","require","exports","module","jQuery","$1f0dc3b9307be026$var$currentPage","async"],"version":3,"file":"index.a21b3345.js.map"}